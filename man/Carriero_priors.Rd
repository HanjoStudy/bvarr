% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/bvar_conjugate.R
\name{Carriero_priors}
\alias{Carriero_priors}
\title{Set conjugate N-IW priors from lambdas as in Carriero}
\usage{
Carriero_priors(Y_in, Z_in = NULL, constant = TRUE, p = 4,
  lambdas = c(0.2, 1, 1, 1, 100, 100), delta = 1, s2_lag = NULL,
  dummy_io = TRUE, dummy_sc = TRUE, y_0_bar_type = c("initial", "all"))
}
\arguments{
\item{Y_in}{multivariate time series}

\item{Z_in}{exogeneous variables}

\item{constant}{logical, default is TRUE, whether the constant should be included}

\item{p}{number of lags}

\item{lambdas}{vector = (l_1, l_power, l_sc, l_io, l_const, l_exo), the l_kron is set to 1 automatically for
conjugate N-IW prior. Short summary:
sd(const in eq i) = l_const * sigma_i
sd(exo in eq i)= l_exo * sigma_i
sd(coef for var j lag l in eq i) = l_1*sigma_i/sigma_j/l^l_power}

\item{delta}{vector [m x 1] or scalar or "AR1". Are used for prior Phi_1 and in sc/io dummy observations
Scalar value is replicated m times. If set to "AR1" then deltas will be estimated as AR(1) coefficients (but not greater than one).
Diagonal of Phi_1 is equal to delta. y_0_bar is multiplied by delta componentwise.}

\item{s2_lag}{number of lags in AR() model used to estimate s2 (equal to p by default)
Carriero uses 1 in his matlab code}

\item{dummy_io}{whether to include "initial observation" dummies, logical (TRUE by default)}

\item{dummy_sc}{whether to include "sum of coefficients" dummies, logical (TRUE by default)}

\item{y_0_bar_type}{(either "all" or "initial"). Determines how y_bar0 for sc and io dummy is calculated.
"all": y_bar0 is mean of y for all observations, "initial": p initial observations
Carriero: all, Sim-Zha: initial}
}
\value{
priors list containing Phi_prior [k x m], Omega_prior [k x k], S_prior [m x m], v_prior [1x1],
where k = mp+d
}
\description{
Set conjugate N-IW priors from lambdas as in Carriero
}
\details{
Set conjugate N-IW priors from lambdas as in Carriero
Based on Carriero p. 52-53
}
\examples{
data(Yraw)
priors <- Carriero_priors(Yraw, p = 4, lambdas = c(0.2,1,1,1,100,100))
model <- bvar_conjugate0(priors = priors, keep=1000)
}

